apiVersion: v1
kind: Template
metadata:
  annotations:
    iconClass: icon-rh-integration
    version: '1.2'
  name: '${APP_NAME}'
objects:
  - apiVersion: v1
    kind: ImageStream
    metadata:
      creationTimestamp: null
      labels:
        app: '${APP_NAME}'
        component: '${APP_NAME}'
        group: healthcare
        provider: s2i
        version: '${APP_VERSION}'
      name: '${APP_NAME}'
    spec: {}
    status:
      dockerImageRepository: ""
  - apiVersion: v1
    kind: BuildConfig
    metadata:
      creationTimestamp: null
      labels:
        app: '${APP_NAME}'
        component: '${APP_NAME}'
        group: healthcare
        provider: s2i
        version: '${APP_VERSION}'
      name: '${APP_NAME}'
    spec:
      output:
        to:
          kind: ImageStreamTag
          name: '${APP_NAME}:latest'
      resources:
        limits:
          memory: '${BUILD_MEMORY_LIMIT}'
        requests:
          memory: '${BUILD_MEMORY_REQUEST}'
      source:
        contextDir: '${CONTEXT_DIR}'
        git:
          ref: '${GIT_REF}'
          uri: '${GIT_REPO}'
        type: Git
      strategy:
        sourceStrategy:
          env:
            - name: BUILD_LOGLEVEL
              value: '5'
            - name: ARTIFACT_DIR
              value: '${ARTIFACT_DIR}'
            - name: MAVEN_ARGS
              value: '${MAVEN_ARGS}'
            - name: MAVEN_ARGS_APPEND
              value: '${MAVEN_ARGS_APPEND}'
          forcePull: true
          from:
            kind: ImageStreamTag
            name: 'fuse7-java-openshift:${BUILDER_VERSION}'
            namespace: '${IMAGE_STREAM_NAMESPACE}'
          incremental: true
        type: Source
      triggers:
        - github:
            secret: '${BUILD_SECRET}'
          type: GitHub
        - generic:
            secret: '${BUILD_SECRET}'
          type: Generic
        - type: ConfigChange
        - imageChange: {}
          type: ImageChange
    status:
      lastVersion: 0
  - apiVersion: v1
    kind: DeploymentConfig
    metadata:
      creationTimestamp: null
      labels:
        app: '${APP_NAME}'
        component: '${APP_NAME}'
        group: healthcare
        provider: s2i
        version: '${APP_VERSION}'
      name: '${APP_NAME}'
    spec:
      replicas: 1
      selector:
        app: '${APP_NAME}'
        component: '${APP_NAME}'
        deploymentconfig: '${APP_NAME}'
        group: healthcare
        provider: s2i
        version: '${APP_VERSION}'
      template:
        metadata:
          creationTimestamp: null
          labels:
            app: '${APP_NAME}'
            component: '${APP_NAME}'
            deploymentconfig: '${APP_NAME}'
            group: healthcare
            provider: s2i
            version: '${APP_VERSION}'
        spec:
          containers:
            - env:
                - name: A_MQ_SERVICE_NAME
                  value: '${A_MQ_SERVICE_NAME}'
                - name: A_MQ_SERVICE_USER
                  value: '${A_MQ_SERVICE_USER}'
                - name: A_MQ_SERVICE_PSWD
                  value: '${A_MQ_SERVICE_PSWD}'
                - name: MYSQL_SERVICE_NAME
                  value: '${MYSQL_SERVICE_NAME}'
                - name: MYSQL_SERVICE_PORT
                  value: '${MYSQL_SERVICE_PORT}'
                - name: MYSQL_SERVICE_DATABASE
                  value: '${MYSQL_SERVICE_DATABASE}'
                - name: MYSQL_USERNAME
                  value: '${MYSQL_USERNAME}'
                - name: MYSQL_PASSWORD
                  value: '${MYSQL_PASSWORD}'
                - name: KUBERNETES_NAMESPACE
                  valueFrom:
                    fieldRef:
                      fieldPath: metadata.namespace
              image: 'library/${APP_NAME}:latest'
              livenessProbe:
                httpGet:
                  path: /health
                  port: 8081
                initialDelaySeconds: 180
              name: '${APP_NAME}'
              ports:
                - containerPort: 8778
                  name: jolokia
              readinessProbe:
                httpGet:
                  path: /health
                  port: 8081
                initialDelaySeconds: 10
              resources:
                limits:
                  cpu: '${CPU_LIMIT}'
                  memory: '${MEMORY_LIMIT}'
                requests:
                  cpu: '${CPU_REQUEST}'
                  memory: '${MEMORY_REQUEST}'
      triggers:
        - type: ConfigChange
        - imageChangeParams:
            automatic: true
            containerNames:
              - '${APP_NAME}'
            from:
              kind: ImageStreamTag
              name: '${APP_NAME}:latest'
          type: ImageChange
  - apiVersion: v1
    kind: Service
    metadata:
      creationTimestamp: null
      labels:
        app: '${APP_NAME}'
        component: '${APP_NAME}'
        deploymentconfig: '${APP_NAME}'
        group: healthcare
        provider: s2i
        version: '${APP_VERSION}'
      name: '${APP_NAME}'
    spec:
      ports:
        - name: http-8080
          port: 8080
          protocol: TCP
          targetPort: 8080
        - name: http-9001
          port: 9001
          protocol: TCP
          targetPort: 9001
        - name: websocket
          port: 9292
          protocol: TCP
          targetPort: 9292
      selector:
        app: '${APP_NAME}'
        component: '${APP_NAME}'
        deploymentconfig: '${APP_NAME}'
        group: healthcare
        provider: s2i
        version: '${APP_VERSION}'
      sessionAffinity: None
      type: ClusterIP
    status:
      loadBalancer: {}
parameters:
  - description: 'The name assigned to the application.'
    displayName: 'Application Name'
    name: APP_NAME
    required: true
    value: dha-epic
  - description: 'The URL of the repository with your application source code.'
    displayName: 'Git Repository URL'
    name: GIT_REPO
    required: true
    value: 'https://github.com/yanxuehe/dha-epic.git'
  - description: "Set this to a branch name, tag or other ref of your repository if you\nare not using the default branch."
    displayName: 'Git Reference'
    name: GIT_REF
    value: master
  - description: 'Path within Git project to build; empty for root project directory.'
    displayName: 'Project Context DIR'
    name: CONTEXT_DIR
    value: null
  - description: 'The version of the FIS S2I builder image to use.'
    displayName: 'Builder version'
    name: BUILDER_VERSION
    value: '1.2'
  - description: 'The application version.'
    displayName: 'Application Version'
    name: APP_VERSION
    value: 1.0.0.fuse-720019
  - description: 'Arguments passed to mvn in the build.'
    displayName: 'Maven Arguments'
    name: MAVEN_ARGS
    value: 'package -DskipTests -Dfabric8.skip -e -B'
  - description: 'Extra arguments passed to mvn, e.g. for multi-module builds.'
    displayName: 'Extra Maven Arguments'
    name: MAVEN_ARGS_APPEND
  - description: 'Directory of the artifact to be built, e.g. for multi-module builds.'
    displayName: 'Maven build directory'
    name: ARTIFACT_DIR
  - description: "Namespace in which the Fuse ImageStreams are installed. These ImageStreams\nare normally installed in the openshift namespace. You should only need to modify\nthis if you've installed the ImageStreams in a different namespace/project."
    displayName: 'Image Stream Namespace'
    name: IMAGE_STREAM_NAMESPACE
    required: true
    value: openshift
  - description: 'The secret needed to trigger a build.'
    displayName: 'Git Build Secret'
    from: '[a-zA-Z0-9]{40}'
    generate: expression
    name: BUILD_SECRET
  - description: 'The amount of CPU to request.'
    displayName: 'CPU request'
    name: CPU_REQUEST
    required: true
    value: '0.2'
  - description: 'The amount of memory required for the container to run.'
    displayName: 'Memory request'
    name: MEMORY_REQUEST
    required: true
    value: 256Mi
  - description: 'The amount of CPU the container is limited to use.'
    displayName: 'CPU limit'
    name: CPU_LIMIT
    required: true
    value: '1.0'
  - description: 'The amount of memory the container is limited to use.'
    displayName: 'Memory limit'
    name: MEMORY_LIMIT
    required: true
    value: 256Mi
  - description: 'The amount of memory to request for builds.'
    displayName: 'Build Memory request'
    name: BUILD_MEMORY_REQUEST
    required: true
    value: 0.7G
  - description: 'The amount of memory the build container is limited to use.'
    displayName: 'Build Memory limit'
    name: BUILD_MEMORY_LIMIT
    required: true
    value: 0.8G
  - description: 'The service name for AMQ'
    name: A_MQ_SERVICE_NAME
    value: broker-amq-tcp
  - description: 'The service user for AMQ'
    name: A_MQ_SERVICE_USER
    value: admin
  - description: 'The service password for AMQ'
    name: A_MQ_SERVICE_PSWD
    value: admin
  - description: 'The service name for MySQL'
    name: MYSQL_SERVICE_NAME
    value: mysql
  - description: 'The service port for MySQL'
    name: MYSQL_SERVICE_PORT
    value: '3306'
  - description: 'The service db name for MySQL'
    name: MYSQL_SERVICE_DATABASE
    value: epic
  - description: 'The service username for MySQL'
    name: MYSQL_USERNAME
    value: user1
  - description: 'The service password for MySQL'
    name: MYSQL_PASSWORD
    value: password
